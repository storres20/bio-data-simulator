<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>ESP8266 Simulator - MHUTEMP</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 2rem;
            display: flex;
            justify-content: center;
            align-items: flex-start;
        }

        .container {
            width: 100%;
            max-width: 800px;
        }

        h1 {
            text-align: center;
            color: white;
            font-size: 2rem;
            margin-bottom: 2rem;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.2);
        }

        h2 {
            color: #333;
            font-size: 1.3rem;
            margin-bottom: 1rem;
        }

        .stats {
            background: white;
            padding: 2rem;
            border-radius: 15px;
            text-align: center;
            margin-bottom: 2rem;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            border-top: 5px solid #667eea;
        }

        .stats h3 {
            color: #667eea;
            font-size: 1.1rem;
            margin-bottom: 1rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .stats .count {
            font-size: 3.5rem;
            font-weight: bold;
            color: #333;
            margin: 1rem 0;
        }

        .stats .detail {
            font-size: 1rem;
            color: #666;
            display: flex;
            justify-content: center;
            gap: 1.5rem;
            flex-wrap: wrap;
        }

        .stats .detail span {
            background: #f0f0f0;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-weight: 500;
        }

        form, .device {
            background: white;
            padding: 2rem;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            margin-bottom: 2rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        label {
            font-weight: 600;
            color: #333;
            display: block;
            margin-bottom: 0.5rem;
            font-size: 0.95rem;
        }

        input[type="number"],
        input[type="text"],
        select {
            width: 100%;
            padding: 0.75rem;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        input[type="number"]:focus,
        input[type="text"]:focus,
        select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        input[type="checkbox"] {
            width: 20px;
            height: 20px;
            margin-right: 0.5rem;
            cursor: pointer;
        }

        .checkbox-label {
            display: flex;
            align-items: center;
            cursor: pointer;
            user-select: none;
        }

        button {
            padding: 0.75rem 2rem;
            border: none;
            border-radius: 8px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            font-weight: 600;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }

        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
        }

        button:active {
            transform: translateY(0);
        }

        .device {
            border-left: 6px solid #4CAF50;
            position: relative;
            transition: all 0.3s ease;
        }

        .device:hover {
            transform: translateX(5px);
            box-shadow: 0 10px 35px rgba(0,0,0,0.25);
        }

        .device-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid #f0f0f0;
        }

        .device-username {
            font-size: 1.3rem;
            font-weight: bold;
            color: #333;
        }

        .device-status {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 600;
        }

        .status-dot {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            animation: pulse 2s infinite;
        }

        .status-active {
            background: #4CAF50;
        }

        .status-inactive {
            background: #f44336;
        }

        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.5; }
        }

        .door-status {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-weight: 600;
            font-size: 0.9rem;
            margin: 1rem 0;
        }

        .door-closed {
            background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);
            color: white;
        }

        .door-open {
            background: linear-gradient(135deg, #f44336 0%, #e53935 100%);
            color: white;
            animation: blink 1s infinite;
        }

        .door-unknown {
            background: #9e9e9e;
            color: white;
        }

        @keyframes blink {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.7; }
        }

        .device-info {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin: 1rem 0;
        }

        .info-item {
            background: #f8f9fa;
            padding: 1rem;
            border-radius: 8px;
            border-left: 4px solid #667eea;
        }

        .info-label {
            font-size: 0.85rem;
            color: #666;
            margin-bottom: 0.25rem;
        }

        .info-value {
            font-size: 1.1rem;
            font-weight: 600;
            color: #333;
        }

        .button-group {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .button-group button,
        .button-group form button {
            width: 100%;
            margin: 0;
        }

        .btn-orange {
            background: linear-gradient(135deg, #ff9800 0%, #f57c00 100%);
            box-shadow: 0 4px 15px rgba(255, 152, 0, 0.3);
        }

        .btn-blue {
            background: linear-gradient(135deg, #2196F3 0%, #1976D2 100%);
            box-shadow: 0 4px 15px rgba(33, 150, 243, 0.3);
        }

        .btn-red {
            background: linear-gradient(135deg, #f44336 0%, #d32f2f 100%);
            box-shadow: 0 4px 15px rgba(244, 67, 54, 0.3);
        }

        .btn-delete {
            background: linear-gradient(135deg, #f44336 0%, #d32f2f 100%);
            padding: 0.5rem 1.5rem;
            font-size: 0.9rem;
        }

        .empty-state {
            text-align: center;
            padding: 3rem;
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }

        .empty-state p {
            color: #999;
            font-size: 1.2rem;
            margin-top: 1rem;
        }

        .empty-icon {
            font-size: 4rem;
            opacity: 0.3;
        }

        .range-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
        }

        @media (max-width: 768px) {
            body {
                padding: 1rem;
            }

            h1 {
                font-size: 1.5rem;
            }

            .stats .count {
                font-size: 2.5rem;
            }

            .button-group {
                grid-template-columns: 1fr;
            }

            .range-grid {
                grid-template-columns: 1fr;
            }

            .device-info {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
<div class="container">
    <h1>🔧 ESP8266 Device Simulator - MHUTEMP</h1>

    <div class="stats">
        <h3>System Status</h3>
        <div class="count"><%= devices.length %></div>
        <div class="detail">
            <span>📊 DB: <%= devices.length %> devices</span>
            <span>💾 Memory: <%= typeof activeCount !== 'undefined' ? activeCount : devices.length %> active</span>
        </div>
    </div>

    <form action="/add" method="POST">
        <h2>➕ Create New Simulated Device</h2>

        <div class="form-group">
            <label>Username:</label>
            <input type="text" name="username" placeholder="e.g., sensor_01" required>
        </div>

        <div id="rangeFields">
            <div class="range-grid">
                <div class="form-group">
                    <label>Min Temp (Temp.OUT):</label>
                    <input type="number" step="0.01" name="minDsT" placeholder="2.0" required>
                </div>

                <div class="form-group">
                    <label>Max Temp (Temp.OUT):</label>
                    <input type="number" step="0.01" name="maxDsT" placeholder="6.0" required>
                </div>

                <div class="form-group">
                    <label>Min Temp (Temp.IN):</label>
                    <input type="number" step="0.01" name="minT" placeholder="18.0" required>
                </div>

                <div class="form-group">
                    <label>Max Temp (Temp.IN):</label>
                    <input type="number" step="0.01" name="maxT" placeholder="25.0" required>
                </div>

                <div class="form-group">
                    <label>Min Humidity (Hum.IN):</label>
                    <input type="number" step="0.01" name="minH" placeholder="30.0" required>
                </div>

                <div class="form-group">
                    <label>Max Humidity (Hum.IN):</label>
                    <input type="number" step="0.01" name="maxH" placeholder="60.0" required>
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="checkbox-label">
                <input type="checkbox" name="fixed" id="fixedMode">
                <span>Fixed Mode (constant values)</span>
            </label>
        </div>

        <div id="fixedFields" style="display:none;">
            <div class="range-grid">
                <div class="form-group">
                    <label>Fixed Temp (Temp.OUT):</label>
                    <input type="number" step="0.01" name="dsTemperature" value="4.0">
                </div>

                <div class="form-group">
                    <label>Fixed Temp (Temp.IN):</label>
                    <input type="number" step="0.01" name="temperature" value="22.0">
                </div>

                <div class="form-group">
                    <label>Fixed Humidity (Hum.IN):</label>
                    <input type="number" step="0.01" name="humidity" value="45.0">
                </div>
            </div>
        </div>

        <div class="form-group">
            <label>Door Status:</label>
            <select name="doorStatus">
                <option value="closed" selected>🔒 Closed</option>
                <option value="open">🔓 Open</option>
                <option value="unknown">❓ Unknown</option>
            </select>
        </div>

        <div class="form-group">
            <label>Simulation Interval (ms):</label>
            <input type="number" name="interval" value="2000" placeholder="2000" required>
        </div>

        <button type="submit">Start Simulation</button>
    </form>

    <h2 style="color: white; text-align: center; margin-bottom: 1rem;">📋 Simulated Devices</h2>

    <div class="button-group">
        <button onclick="logSimulators()" class="btn-orange">
            📋 Ver simuladores activos
        </button>

        <form action="/force-sync" method="POST">
            <button class="btn-blue">
                🔄 Sincronizar DB ↔ Memoria
            </button>
        </form>

        <form action="/delete-all" method="POST" onsubmit="return confirm('¿Eliminar TODOS los simuladores activos? Esta acción es irreversible.')">
            <button class="btn-red">
                🗑️ Eliminar TODOS
            </button>
        </form>
    </div>

    <% if (devices.length === 0) { %>
        <div class="empty-state">
            <div class="empty-icon">📭</div>
            <p>No devices currently running.</p>
        </div>
    <% } else { %>
        <% devices.forEach(device => { %>
            <div class="device">
                <div class="device-header">
                    <div class="device-username"><%= device.username %></div>
                    <div class="device-status">
                        <div class="status-dot <%= device.running ? 'status-active' : 'status-inactive' %>"></div>
                        <%= device.running ? 'Sending data' : 'Stopped' %>
                    </div>
                </div>

                <%
                    let doorClass = 'door-unknown';
                    let doorIcon = '❓';
                    let doorText = 'Unknown';

                    if (device.doorStatus === 'closed') {
                        doorClass = 'door-closed';
                        doorIcon = '🔒';
                        doorText = 'Closed';
                    } else if (device.doorStatus === 'open') {
                        doorClass = 'door-open';
                        doorIcon = '🔓';
                        doorText = 'Open';
                    }
                %>

                <div class="door-status <%= doorClass %>">
                    <%= doorIcon %> Door: <%= doorText %>
                </div>

                <div class="device-info">
                    <div class="info-item">
                        <div class="info-label">Interval</div>
                        <div class="info-value"><%= device.interval %> ms</div>
                    </div>

                    <% if (device.fixed) { %>
                        <div class="info-item">
                            <div class="info-label">Temp.OUT</div>
                            <div class="info-value"><%= device.dsTemperature %> °C</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Temp.IN</div>
                            <div class="info-value"><%= device.temperature %> °C</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Hum.IN</div>
                            <div class="info-value"><%= device.humidity %> %</div>
                        </div>
                    <% } else { %>
                        <div class="info-item">
                            <div class="info-label">Temp.OUT Range</div>
                            <div class="info-value"><%= device.minDsT %>–<%= device.maxDsT %> °C</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Temp.IN Range</div>
                            <div class="info-value"><%= device.minT %>–<%= device.maxT %> °C</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Hum.IN Range</div>
                            <div class="info-value"><%= device.minH %>–<%= device.maxH %> %</div>
                        </div>
                    <% } %>
                </div>

                <div class="actions">
                    <form action="/delete/<%= device._id %>" method="POST" onsubmit="return confirm('Delete this device?')">
                        <button type="submit" class="btn-delete">Delete Device</button>
                    </form>
                </div>
            </div>
        <% }); %>
    <% } %>
</div>

<script>
    const fixedCheckbox = document.getElementById('fixedMode');
    const fixedFields = document.getElementById('fixedFields');
    const rangeFields = document.getElementById('rangeFields');
    const requiredRangeInputs = rangeFields.querySelectorAll('input');

    function toggleFields() {
        if (fixedCheckbox.checked) {
            fixedFields.style.display = 'block';
            rangeFields.style.display = 'none';
            requiredRangeInputs.forEach(input => input.removeAttribute('required'));
        } else {
            fixedFields.style.display = 'none';
            rangeFields.style.display = 'block';
            requiredRangeInputs.forEach(input => input.setAttribute('required', 'required'));
        }
    }

    fixedCheckbox.addEventListener('change', toggleFields);
    toggleFields();

    function logSimulators() {
        fetch('/log-active', {
            method: 'POST'
        }).then(() => {
            alert('✅ Ver consola del servidor');
        }).catch(err => {
            alert('❌ Error al intentar consultar simuladores');
            console.error(err);
        });
    }
</script>
</body>
</html>
